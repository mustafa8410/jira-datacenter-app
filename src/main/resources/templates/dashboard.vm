<html>
<head>
    <meta charset="UTF-8">
    <title>User Listing</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        tr.clickable-row td:not(:first-child) {
            cursor: pointer;
        }

        .table td:first-child,
        .table th:first-child {
            text-align: center;
        }

        .table td:first-child {
            border-right: 1px solid #dee2e6;
        }
        #pageSizeSelect {
            margin-block-end: 0;
        }

        #jumpToPage.is-invalid { border-color: #dc3545; }
    </style>
</head>
<body class="bg-light">
#if(!$users || $users.isEmpty())
<div class="alert alert-info">
    No users found for this page. Try a different page or page size.
</div>
#else
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">User Listing</h4>
                    </div>
                    <div class="card-body">

                        <!-- Arama ve filtre -->
                        <div class="mb-3 d-flex justify-content-between align-items-center">
                            <input type="text" class="form-control w-50" id="searchInput" placeholder="Search by username or display name">

                            <div class="d-flex justify-content-center align-items-center">
                                <label for="jumpToPage" class="me-2 mb-0">Jump to page:</label>
                                <input type="number" id="jumpToPage" class="form-control" style="width:80px; display:inline-block;" min="1" max="$totalPages" placeholder="Page #" />
                                <button class="btn btn-outline-primary ms-2" onclick="jumpToPage($totalPages, $pageSize)">Go</button>
                            </div>
                        </div>

                        <!-- Kullanıcı tablosu -->
                        <table class="table table-hover align-middle">
                            <thead class="table-light">
                            <tr>
                                <th><input type="checkbox" id="select-all" /></th>
                                <th>Username</th>
                                <th>Display Name</th>
                                <th>Last Login</th>
                                <th class="text-center">Warnings</th>
                            </tr>
                            </thead>
                            <tbody>
                                #foreach ($user in $users)
                                <tr class="clickable-row" data-href="$contextPath/plugins/servlet/my-plugin-user-detail?username=$user.username">
                                    <td class="checkbox-column"><input type="checkbox" class="user-checkbox" value="$user.username"></td>
                                    <td>$user.username</td>
                                    <td>$user.displayName</td>
                                    <td>$user.lastLogin</td>
                                    <td class="text-center">
                                        #if ($user.warnings && $user.warnings.size() > 0)
                                            <span class="text-warning" data-bs-toggle="tooltip" data-bs-html="true"
                                                  title="<ul style='margin:0;padding:0;'>#foreach($w in $user.warnings)<li style='margin-left:-20px;'>$w</li>#end</ul>">
                                                <!-- Custom SVG icon (Font Awesome Triangle Exclamation, bright yellow) -->
                                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 640 640" width="22" height="22" style="vertical-align:middle;" class="warning-sign">
                                                    <path fill="#FFD43B" d="M320 64C334.7 64 348.2 72.1 355.2 85L571.2 485C577.9 497.4 577.6 512.4 570.4 524.5C563.2 536.6 550.1 544 536 544L104 544C89.9 544 76.9 536.6 69.6 524.5C62.3 512.4 62.1 497.4 68.8 485L284.8 85C291.8 72.1 305.3 64 320 64zM320 232C306.7 232 296 242.7 296 256L296 368C296 381.3 306.7 392 320 392C333.3 392 344 381.3 344 368L344 256C344 242.7 333.3 232 320 232zM346.7 448C347.3 438.1 342.4 428.7 333.9 423.5C325.4 418.4 314.7 418.4 306.2 423.5C297.7 428.7 292.8 438.1 293.4 448C292.8 457.9 297.7 467.3 306.2 472.5C314.7 477.6 325.4 477.6 333.9 472.5C342.4 467.3 347.3 457.9 346.7 448z"/>
                                                </svg>
                                            </span>
                                        #end
                                    </td>

                                </tr>
                                #end
                            </tbody>
                        </table>

                        #set($window = 2) ## how many pages to show on each side of current page
                        #set($startPage = $currentPage - $window)
                        #set($endPage = $currentPage + $window)
                        #set($previousPage = $currentPage - 1)
                        #set($nextPage = $currentPage + 1)

                        #if($startPage < 2)
                            #set($startPage = 2)
                        #end
                        #if($endPage > $totalPages - 1)
                            #set($endPage = $totalPages - 1)
                        #end

                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center">


                                ## Previous
                                #if($currentPage > 1)
                                    <li class="page-item">
                                        <a class="page-link" href="?page=$previousPage&pageSize=$pageSize">Previous</a>
                                    </li>
                                #else
                                    <li class="page-item disabled"><span class="page-link">Previous</span></li>
                                #end

                                ## Always show page 1
                                #if($currentPage == 1)
                                    <li class="page-item active disabled" aria-current="page"><span class="page-link">1</span></li>
                                #else
                                    <li class="page-item"><a class="page-link" href="?page=1&pageSize=$pageSize">1</a></li>
                                #end

                                ## Ellipsis if needed
                                #if($startPage > 2)
                                    <li class="page-item disabled"><span class="page-link">...</span></li>
                                #end

                                ## Page window
                                #foreach($i in [$startPage..$endPage])
                                    #if($i > 1 && $i < $totalPages)
                                        #if($i == $currentPage)
                                            <li class="page-item active disabled" aria-current="page"><span class="page-link">$i</span></li>
                                        #else
                                            <li class="page-item"><a class="page-link" href="?page=$i&pageSize=$pageSize">$i</a></li>
                                        #end
                                    #end
                                #end

                                ## Ellipsis after window if needed
                                #if($endPage < $totalPages - 1)
                                    <li class="page-item disabled"><span class="page-link">...</span></li>
                                #end

                                ## Always show last page (if more than 1)
                                #if($totalPages > 1)
                                    #if($currentPage == $totalPages)
                                        <li class="page-item active disabled" aria-current="page"><span class="page-link">$totalPages</span></li>
                                    #else
                                        <li class="page-item"><a class="page-link" href="?page=$totalPages&pageSize=$pageSize">$totalPages</a></li>
                                    #end
                                #end

                                ## Next
                                #if($currentPage < $totalPages)
                                    <li class="page-item"><a class="page-link" href="?page=$nextPage&pageSize=$pageSize">Next</a></li>
                                #else
                                    <li class="page-item disabled"><span class="page-link">Next</span></li>
                                #end

                            </ul>


                        </nav>






                        <form id="bulkForm" method="post" action="$contextPath/plugins/servlet/bulk-action"></form>

                        <div class="mt-4 text-end d-flex justify-content-between align-items-end mb-1">
                            <div>
                                <button class="btn btn-danger" onclick="revokeInactive90()">Revoke All Inactive for 90+ Days</button>
                            </div>
                            <div>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                        Bulk Action
                                    </button>
                                    <ul class="dropdown-menu">
    ##                                    <li>
    ##                                        <a class="dropdown-item" href="#" onclick="return bulkAction('deactivate')">Deactivate Users</a>
    ##                                    </li>
                                        <li>
                                            <a class="dropdown-item" href="#" onclick="return bulkAction('remove-group')">Revoke License (Remove from Group)</a>
                                        </li>
                                        <!-- You can add more actions here -->
                                    </ul>
                                </div>
                                <button class="btn btn-outline-danger ms-2" onclick="clearAllSelections()">Clear Selections</button>
                            </div>
                            <form method="get" id="pageSizeSelect">
                                <input type="hidden" name="page" value="$currentPage"/>
                                <label for="pageSizeSelect" class="me-2">Rows per page:</label>
                                <select name="pageSize" id="pageSizeSelect" class="form-select d-inline w-auto"
                                        onchange="this.form.submit()">
                                    #foreach($size in [10,25,50,100])
                                        <option value="$size" #if($pageSize == $size) selected #end>$size</option>
                                    #end
                                </select>
                            </form>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
#end
<!-- JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    // --- Maintain selection state globally ---
    let selectedUsers = new Set(JSON.parse(localStorage.getItem('selectedUsers') || '[]'));

    function updateLocalStorage() {
        localStorage.setItem('selectedUsers', JSON.stringify(Array.from(selectedUsers)));
    }

    // Restore checkbox state on page load
    function restoreCheckboxes() {
        document.querySelectorAll(".user-checkbox").forEach(cb => {
            if (selectedUsers.has(cb.value)) {
                cb.checked = true;
                cb.closest("tr").classList.add("selected-row");
            } else {
                cb.checked = false;
                cb.closest("tr").classList.remove("selected-row");
            }
        });
        // Update the "select all" checkbox status
        const allOnPage = Array.from(document.querySelectorAll(".user-checkbox"));
        const allChecked = allOnPage.length > 0 && allOnPage.every(cb => selectedUsers.has(cb.value));
        document.getElementById("select-all").checked = allChecked;
    }

    document.addEventListener("DOMContentLoaded", function () {
        // --- Clickable row handler ---
        document.querySelectorAll("tr.clickable-row").forEach(row => {
            row.addEventListener("click", function (e) {
                const cb = this.querySelector("input.user-checkbox");
                if (e.target.closest("td:first-child")) {
                    if (e.target === cb) { e.stopPropagation(); return; }
                    cb.checked = !cb.checked;
                    cb.dispatchEvent(new Event('change')); // trigger our own handler
                    e.stopPropagation(); return;
                }
                window.location.href = this.dataset.href;
            });
        });

        // --- Tooltips ---
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(el => new bootstrap.Tooltip(el));

        // --- Restore selection state ---
        restoreCheckboxes();

        // --- "Select all" checkbox handler ---
        document.getElementById("select-all").addEventListener("change", function () {
            const check = this.checked;
            document.querySelectorAll(".user-checkbox").forEach(cb => {
                cb.checked = check;
                cb.closest("tr").classList.toggle("selected-row", check);
                if (check) {
                    selectedUsers.add(cb.value);
                } else {
                    selectedUsers.delete(cb.value);
                }
            });
            updateLocalStorage();
        });

        // --- Individual checkbox handler ---
        document.querySelectorAll(".user-checkbox").forEach(cb => {
            cb.addEventListener("change", function () {
                if (this.checked) {
                    selectedUsers.add(this.value);
                } else {
                    selectedUsers.delete(this.value);
                }
                updateLocalStorage();
                this.closest("tr").classList.toggle("selected-row", this.checked);

                // Update "select all" status for the page
                const allOnPage = Array.from(document.querySelectorAll(".user-checkbox"));
                document.getElementById("select-all").checked = allOnPage.length > 0 && allOnPage.every(cb => cb.checked);
            });
        });

        // --- Inline search handler ---
        document.getElementById("searchInput").addEventListener("input", filterUsers);
    });

    // --- Filter table rows by search ---
    function filterUsers() {
        const searchValue = document.getElementById("searchInput").value.toLowerCase();
        const rows = document.querySelectorAll(".table tbody tr");
        rows.forEach(row => {
            const username = row.cells[1]?.innerText.toLowerCase();
            const displayName = row.cells[2]?.innerText.toLowerCase();
            const matchesSearch = username.includes(searchValue) || displayName.includes(searchValue);
            row.style.display = matchesSearch ? "" : "none";
        });
    }

    // --- Bulk action: submit selected usernames across all pages ---
    function bulkAction(action) {
        if (selectedUsers.size === 0) {
            alert("Please select at least one user.");
            return false; // prevent default
        }
        // Confirm action
        let confirmMsg = "";
        // if (action === 'deactivate') confirmMsg = "Are you sure you want to deactivate the selected users?";
        if (action === 'remove-group') confirmMsg = "Are you sure you want to revoke licenses (remove from group) for selected users?";
        // Add more cases if needed

        if (!confirm(confirmMsg)) return false;

        // Submit form with action
        const form = document.getElementById("bulkForm");
        form.innerHTML = "";
        selectedUsers.forEach(username => {
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "selectedUsers";
            input.value = username;
            form.appendChild(input);
        });
        // Add action as hidden field
        const actionInput = document.createElement("input");
        actionInput.type = "hidden";
        actionInput.name = "action";
        actionInput.value = action;
        form.appendChild(actionInput);

        form.submit();
        clearAllSelections();
        return false; // prevent default dropdown link behavior
    }


    // --- Jump to page ---
    function jumpToPage(totalPages, pageSize) {
        var input = document.getElementById("jumpToPage");
        var page = parseInt(input.value, 10);
        if (isNaN(page) || page < 1 || page > totalPages) {
            input.classList.add("is-invalid");
            input.value = '';
            input.placeholder = "1 - " + totalPages;
            setTimeout(() => input.classList.remove("is-invalid"), 1500);
            return;
        }
        window.location.href = "?page=" + page + "&pageSize=" + pageSize;
    }

    function clearAllSelections() {
        selectedUsers.clear();
        updateLocalStorage();
        restoreCheckboxes();
    }

    function revokeInactive90() {
        if (!confirm("Are you sure you want to revoke licenses for ALL users inactive for 90 days or more? This cannot be undone.")) return;

        const form = document.createElement("form");
        form.method = "POST";
        form.action = "/jira/plugins/servlet/revoke-inactive-90";
        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }



</script>

</body>
</html>
